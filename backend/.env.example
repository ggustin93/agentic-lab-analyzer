# Health Document Analyzer Configuration

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# AI Service Type: 'cloud' for cloud services, 'local' for local processing
AI_SERVICE_TYPE=local

# OCR Service Type: 'tesseract' for local OCR, 'mistral' for cloud OCR
OCR_SERVICE_TYPE=tesseract

# =============================================================================
# CLOUD AI CONFIGURATION
# =============================================================================

# Cloud Provider: 'chutes_ai', 'openai', 'anthropic'
CLOUD_PROVIDER=chutes_ai

# Chutes.ai Configuration (Decentralized AI)
CHUTES_AI_API_KEY=your_chutes_ai_api_key_here
CHUTES_AI_ENDPOINT=https://api.chutes.ai/v1

# =============================================================================
# LOCAL AI CONFIGURATION
# =============================================================================

# Local Provider: 'ollama', 'openai' (for local OpenAI-compatible endpoints)
LOCAL_PROVIDER=ollama

# Ollama Configuration (Local AI)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=llama3.2
OLLAMA_INSIGHTS_MODEL=qwen2.5-coder:7b

# OpenAI Configuration (can be used for both local and cloud)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o-mini
OPENAI_BASE_URL=  # Leave empty for OpenAI cloud, set for local endpoints

# Anthropic Configuration
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# =============================================================================
# OCR CONFIGURATION
# =============================================================================

# Mistral OCR Configuration (Cloud)
MISTRAL_API_KEY=your_mistral_api_key_here
MISTRAL_OCR_MODEL=mistral-ocr-2505

# Tesseract OCR Configuration (Local)
TESSERACT_CMD=/usr/bin/tesseract

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# File Upload Configuration
MAX_FILE_SIZE=10485760  # 10MB in bytes
UPLOAD_DIR=uploads

# Database Configuration
DATABASE_URL=sqlite:///./health_analyzer.db

# Security Configuration
SECRET_KEY=your_secret_key_change_in_production

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Logfire Configuration (optional)
LOGFIRE_TOKEN=your_logfire_token_here
ENABLE_MONITORING=true

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================

# AI Model Configuration
MAX_TOKENS=2000

# Processing Configuration
ASYNC_PROCESSING=true
CACHE_TTL=3600  # Cache TTL in seconds

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Logging Configuration
LOG_LEVEL=INFO

# Debug Mode
DEBUG=false

# CORS Configuration
CORS_ORIGINS=http://localhost:4200,http://localhost:3000

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Example 1: Full Local Configuration (Ollama + Tesseract)
# AI_SERVICE_TYPE=local
# LOCAL_PROVIDER=ollama
# OCR_SERVICE_TYPE=tesseract
# OLLAMA_BASE_URL=http://localhost:11434
# OLLAMA_MODEL=llama3.2

# Example 2: Cloud Configuration (Chutes.ai + Mistral OCR)
# AI_SERVICE_TYPE=cloud
# CLOUD_PROVIDER=chutes_ai
# OCR_SERVICE_TYPE=mistral
# CHUTES_AI_API_KEY=your_key
# MISTRAL_API_KEY=your_key

# Example 3: Hybrid Configuration (Local Ollama + Cloud OCR)
# AI_SERVICE_TYPE=local
# LOCAL_PROVIDER=ollama
# OCR_SERVICE_TYPE=mistral
# OLLAMA_BASE_URL=http://localhost:11434
# MISTRAL_API_KEY=your_key

# Example 4: OpenAI Cloud Configuration
# AI_SERVICE_TYPE=cloud
# CLOUD_PROVIDER=openai
# OCR_SERVICE_TYPE=tesseract
# OPENAI_API_KEY=your_key

# Example 5: Local OpenAI-compatible endpoint
# AI_SERVICE_TYPE=local
# LOCAL_PROVIDER=openai
# OPENAI_BASE_URL=http://localhost:8080/v1  # Local LLM server
# OCR_SERVICE_TYPE=tesseract